# Env
export TERM=${TERM:-"xterm"}

export PASSWORD_STORE_ENABLE_EXTENSIONS=true
export PASSWORD_STORE_EXTENSIONS_DIR=$HOME/.nix-profile/lib/password-store/extensions

# ZSH params
REPORTTIME=3
HISTSIZE=${HISTSIZE:-10000}
SAVEHIST=$HISTSIZE
setopt SHARE_HISTORY
setopt EXTENDED_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt APPEND_HISTORY
HISTFILE=~/.history

setopt NO_FLOW_CONTROL
setopt NO_CLOBBER

# Keybindings
bindkey "^[[3~" delete-char
bindkey '^[[1;5C' forward-word
bindkey '^[[1;5D' backward-word   

autoload -U edit-command-line
zle -N edit-command-line
# vi style
bindkey -M vicmd v edit-command-line

unsetopt flow_control

# Completions
export FPATH=$HOME/.nix-profile/share/zsh/site-functions:$FPATH
autoload -Uz compinit

setopt always_to_end
setopt complete_in_word
zmodload zsh/complist
autoload -Uz compinit
compinit

zstyle ':completion:*' menu select
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Z}{a-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

if [[ ! -e $HOME/.zcompdump ]]; 
then echo "! compinit" >&2; compinit; 
else compinit -C;
fi

# Prompt
autoload -U colors zsh/terminfo
colors

autoload -Uz vcs_info

zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:*' unstagedstr !
precmd () {
    if [[ -z $(git ls-files --other --exclude-standard 2> /dev/null) ]] {
        zstyle ':vcs_info:*' formats '%F{cyan}[%b%c%u%f%F{cyan}]%f'
    } else {
        zstyle ':vcs_info:*' formats '%F{cyan}[%b%c%u%f%F{red}●%f%F{cyan}]%f'
    }
    vcs_info
}

nixShellPrompt () {
  case $IN_NIX_SHELL in;
    pure) NIXSH="[nix-sh(p)]";;
    impure) NIXSH="[nix-sh(i)]";;
    *) NIXSH="";;
  esac
}

setopt prompt_subst
nixShellPrompt
PS1='${return_code}%F{magenta}%n%f@%F{yellow}%m%f%F{cyan}${NIXSH}%F{yellow}:%B%F{green}%~%f%b ${vcs_info_msg_0_}
$ '

# Tools

source $HOME/.nix-profile/etc/profile.d/autojump.sh
source $HOME/.nix-profile/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

source $HOME/.aliases

# Utils

function trace() {
    echo "! $@"; $@
}

function tmp() {
    cd "$(mktemp -d)"
}

function hr() {
    printf '\n%.0s' {1..10}
    for _ in $(seq 1 3); do
        printf '=%.0s' {1..$COLUMNS}
    done
    printf '\n%.0s' {1..10}
}

function qr2pass() {
         [[ -z "$1" ]] && { echo "otp name empty"; return 1; }
         maim --delay 0.5 |
              zbarimg -q --raw /dev/stdin |
              pass otp append "$1"
}

# Ultimate Plumber

zle-upify() {
    buf="$(echo "$BUFFER" | sed 's/[ |]*$//')"
    tmp="$(mktemp)"
    eval "$buf |& up --unsafe-full-throttle -o '$tmp' 2>/dev/null"
    cmd="$(tail -n +2 "$tmp")"
    rm -f "$tmp"
    BUFFER="$BUFFER | $cmd"
    zle end-of-line
}
zle -N zle-upify

bindkey '^U' zle-upify

export FZF_DEFAULT_OPTS='--no-height'
# Set up fzf key bindings and fuzzy completion
source <(fzf --zsh)
